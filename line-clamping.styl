/**
 * @author     Zino Roman <zino.roman95@gmail.com>
 * @copyright  Zino Roman 2017 
 */
 
/**
 * Mixin for clamping multiline text
 * @param {number} $lines-count - Count of the lines that will be shown
 * @param {css unit} $line-height - line-height property of the element
 * @param {css unit} $font-size - font-size property of the element
 * @param {boolean} $is-inline - Parameter sets inline display mode for the element
 */
line-clamping($lines-count = 1, $line-height = 1.25, $font-size = inherit, $is-inline = false)
    /**
     * @return {string} - Unit of the `$line-height` property
     */ 
    get-line-height-unit()
        unit($line-height)
    
     /**
      * @param {string} $line-height-unit - Unit of the `$line-height` property
      * @return {boolean} - Is `$line-height-unit` relative
      */ 
    is-line-height-unit-relative($line-height-unit)
        if $line-height-unit == ''  or $line-height-unit  == '%' or $line-height-unit == 'em'
            true
        else
            false
    
    /**
     * @param {string} $line-height-unit - Unit of the `$line-height` property
     * @param {boolean} $is-line-height-unit-relative - Is line-height unit relative
     */
    line-clamping-calculate-max-height($line-height-unit, $is-line-height-unit-relative)
        /* Unitless, percents or ems units require
         a different strategy of calculation than all other units */
        if $is-line-height-unit-relative
            $line-height-computed = $line-height
            
            if $line-height-unit == '%'
                //Divide `$line-height` in percents by 100 for correct further calculation
                $line-height-computed = $line-height / 100
        
            /*
                Remove units from `$line-height` to avoid potential error
                when `$line-height` and `$font-size` have differents CSS units
            */
            $line-height-computed = unit($line-height-computed, '')
            
            //Calculate our max-height for the element
            $max-height = $lines-count * ($line-height-computed * $font-size)
        else
            $max-height = $lines-count * $line-height
    
    /**
     * @param {string} $display - CSS value of display property
     */
    line-clamping-strategy-one-line($display)
        /* If we need only one line of the text,
        then better way is to use `text-overflow: ellipsis`
        than `line-clamping-strategy-few-line()` way
        cause it has wider support 
        */
        display $display
        overflow hidden
        text-overflow ellipsis
        white-space nowrap
    
    /**
     * @param {string} $display - CSS value of display property
     * @param {string} $display-webkit - CSS value of display property
     */
    line-clamping-strategy-few-line($display, $display-webkit)        
        $line-height-unit = get-line-height-unit()
        $is-line-height-unit-relative = is-line-height-unit-relative($line-height-unit)
        
        //Rules for IE, Edge, Firefox
        display $display
        max-height line-clamping-calculate-max-height($line-height-unit, $is-line-height-unit-relative)
        overflow hidden
        if $is-line-height-unit-relative
            font-size $font-size
        line-height $line-height
        
        //Rules for webkit browser
        @supports (display $display-webkit) and (-webkit-line-clamp $lines-count)
            display $display-webkit
            -webkit-box-orient vertical
            -webkit-line-clamp $lines-count
            
    line-clamping-get-display()
        /* Remember the fact, that you should set `width` of the element
        when you are using `$is-inline` display mode */
        if $is-inline
            inline-block
        else
            block
    
    line-clamping-get-display-webkit()
        if $is-inline
            -webkit-inline-box 
        else
            -webkit-box

    find-line-clamping-strategy-and-print-rules()
        $display = line-clamping-get-display($is-inline)
        $display-webkit = line-clamping-get-display-webkit($is-inline)

        if $lines-count == 1
            line-clamping-strategy-one-line($display)
        else        
            line-clamping-strategy-few-line($display, $display-webkit)
    
    check-user-arguments()
        if $lines-count < 1
            error('$lines-count argument should be greater then 0')

    pre-init()
        check-user-arguments()

    init()
        pre-init()     
        find-line-clamping-strategy-and-print-rules()
                
    init()